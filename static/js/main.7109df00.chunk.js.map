{"version":3,"sources":["songs/yo-soy-tu-amigo-fiel-toy-story.mp3","songs/un-mundo-ideal-aladdin.mp3","songs/recuerdame-coco.mp3","songs/bob-esponja.mp3","songs/la-pantera-rosa.mp3","notes/do.wav","notes/re.wav","notes/mi.wav","notes/fa.wav","notes/sol.wav","notes/la.wav","notes/si.wav","Componentes/canciones.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Songs","canciones","nombre","categoria","link","require","SongContainer","map","cancion","key","onClick","Audio","play","reproducirCancion","styled","div","App","useState","notaSonando","setNotaSonando","notas","tieneSostenido","className","nota","setTimeout","handleClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sLAAAA,EAAOC,QAAU,IAA0B,4D,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,kBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,0PCG3C,IAsDeC,EAtDD,WAEV,IAAMC,EAAY,CACd,CACIC,OAAQ,uBACRC,UAAW,WACXC,KAAMC,EAAQ,KAElB,CACIH,OAAQ,iBACRC,UAAW,WACXC,KAAMC,EAAQ,KAElB,CACIH,OAAQ,aACRC,UAAW,WACXC,KAAMC,EAAQ,KAElB,CACIH,OAAQ,cACRC,UAAW,WACXC,KAAMC,EAAQ,KAElB,CACIH,OAAQ,kBACRC,UAAW,WACXC,KAAMC,EAAQ,MAStB,OACI,kBAACC,EAAD,KACQ,kDAEIL,EAAUM,KAAI,SAAAC,GACV,OACI,yBACIC,IAAOD,EAAQN,QACf,wBAAIQ,QAAW,kBAbjB,SAACF,GACJ,IAAIG,MAAOH,EAAQJ,MAC3BQ,OAWkCC,CAAkBL,KAAvC,UAAyDA,EAAQN,cAa3FI,EAAgBQ,IAAOC,IAAV,KC6BJC,MApFf,WAAgB,IAAD,EAEyBC,mBAAS,IAFlC,mBAENC,EAFM,KAEOC,EAFP,KAIPC,EAAQ,CACZ,CACElB,OAAQ,KACRE,KAAMC,EAAQ,IACdgB,gBAAgB,GAElB,CACEnB,OAAQ,KACRE,KAAMC,EAAQ,IACdgB,gBAAgB,GAElB,CACEnB,OAAQ,KACRE,KAAMC,EAAQ,IACdgB,gBAAgB,GAElB,CACEnB,OAAQ,KACRE,KAAMC,EAAQ,IACdgB,gBAAgB,GAElB,CACEnB,OAAQ,MACRE,KAAMC,EAAQ,IACdgB,gBAAgB,GAElB,CACEnB,OAAQ,KACRE,KAAMC,EAAQ,IACdgB,gBAAgB,GAElB,CACEnB,OAAQ,KACRE,KAAMC,EAAQ,IACdgB,gBAAgB,IAapB,OACE,yBAAKC,UAAU,mBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,SACX,+CACA,6CAGJ,yBAAKA,UAAU,cAETF,EAAMb,KAAK,SAAAgB,GACT,OACE,yBACEd,IAAOc,EAAKrB,OACZoB,UAAS,eAAYJ,IAAgBK,EAAKrB,QAAU,eACpDQ,QAAW,kBAxBP,SAACa,GACnBJ,EAAeI,EAAKrB,QACL,IAAIS,MAAMY,EAAKnB,MACvBQ,OACPY,YAAW,WACTL,EAAe,QACd,KAkB4BM,CAAYF,KAEzBL,IAAgBK,EAAKrB,QACrB,wBAAIoB,UAAU,gBAAgBJ,GAG9BK,EAAKF,gBAAkB,yBAAKC,UAAU,qBChExCI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7109df00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yo-soy-tu-amigo-fiel-toy-story.2e1a86a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/un-mundo-ideal-aladdin.c8a16086.mp3\";","module.exports = __webpack_public_path__ + \"static/media/recuerdame-coco.f4080db9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bob-esponja.27a22618.mp3\";","module.exports = __webpack_public_path__ + \"static/media/la-pantera-rosa.81b58ea7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/do.18fd3f6f.wav\";","module.exports = __webpack_public_path__ + \"static/media/re.217b943a.wav\";","module.exports = __webpack_public_path__ + \"static/media/mi.1f26c778.wav\";","module.exports = __webpack_public_path__ + \"static/media/fa.a787534a.wav\";","module.exports = __webpack_public_path__ + \"static/media/sol.785a33d2.wav\";","module.exports = __webpack_public_path__ + \"static/media/la.10af03f3.wav\";","module.exports = __webpack_public_path__ + \"static/media/si.70924435.wav\";","import React from 'react';\nimport styled from 'styled-components'\n\nconst Songs = () => {\n    \n    const canciones = [\n        {\n            nombre: 'Yo soy tu amigo fiel',\n            categoria: 'infantil',\n            link: require('../songs/yo-soy-tu-amigo-fiel-toy-story.mp3')\n        }, \n        {\n            nombre: 'Un mundo ideal',\n            categoria: 'infantil',\n            link: require('../songs/un-mundo-ideal-aladdin.mp3')\n        }, \n        {\n            nombre: 'Recuerdame',\n            categoria: 'infantil',\n            link: require('../songs/recuerdame-coco.mp3')\n        }, \n        {\n            nombre: 'Bob esponja',\n            categoria: 'infantil',\n            link: require('../songs/bob-esponja.mp3')\n        }, \n        {\n            nombre: 'La pantera rosa',\n            categoria: 'infantil',\n            link: require('../songs/la-pantera-rosa.mp3')\n        },   \n    ];\n\n    const reproducirCancion = (cancion) => {\n        const reproducir = new Audio (cancion.link);\n        reproducir.play();\n    }\n  \n    return ( \n        <SongContainer>\n                <h2>LISTA DE CANCIONES</h2>\n                {\n                    canciones.map(cancion => {\n                        return(\n                            <div \n                                key = {cancion.nombre}>\n                                <h3 onClick = {() => reproducirCancion(cancion)}> Suena {cancion.nombre}</h3>\n                            </div>\n                            )\n                        })\n                    }\n                    {/* <button onClick= {pausar}>Pausar</button> */}\n        </SongContainer>\n    )\n}\n\n\nexport default Songs;\n\nconst SongContainer = styled.div`{\n    background-color: white;\n    width: 25%;\n    display: none;\n}`","import React, { useState } from 'react';\nimport './App.css';\nimport Songs from './Componentes/canciones'\n\nfunction App() {\n\n  const [notaSonando, setNotaSonando] = useState('')\n\n  const notas = [\n    {\n      nombre: \"Do\",\n      link: require(\"./notes/do.wav\"),\n      tieneSostenido: true,\n    },\n    {\n      nombre: \"Re\",\n      link: require(\"./notes/re.wav\"),\n      tieneSostenido: true,\n    },\n    {\n      nombre: \"Mi\",\n      link: require(\"./notes/mi.wav\"),\n      tieneSostenido: false,\n    },\n    {\n      nombre: \"Fa\",\n      link: require(\"./notes/fa.wav\"),\n      tieneSostenido: true,\n    },\n    {\n      nombre: \"Sol\",\n      link: require(\"./notes/sol.wav\"),\n      tieneSostenido: true,\n    },\n    {\n      nombre: \"La\",\n      link: require(\"./notes/la.wav\"),\n      tieneSostenido: true,\n    },\n    {\n      nombre: \"Si\",\n      link: require(\"./notes/si.wav\"),\n      tieneSostenido: false,\n    },\n  ]\n\n  const handleClick = (nota) => {\n    setNotaSonando(nota.nombre);\n    const sonido = new Audio(nota.link);\n    sonido.play();\n    setTimeout(() => {\n      setNotaSonando(null)\n    }, 300);\n  }\n\n  return (\n    <div className=\"App totalHeight\">\n      <Songs/>\n      <div className=\"title\">\n          <h1>Piano con React</h1>\n          <h2>Â¡A tocar!</h2>\n      </div> \n\n      <div className=\"contenedor\">\n          {\n            notas.map( nota => {\n              return(\n                <div\n                  key = {nota.nombre}\n                  className = {`nota ${notaSonando === nota.nombre && 'notaSonando'}`}\n                  onClick = {() => handleClick(nota)}>\n                    {\n                      notaSonando === nota.nombre &&\n                      <h2 className=\"nombreDeNota\">{notaSonando}</h2>\n                    }\n                    {\n                      nota.tieneSostenido && <div className=\"sostenido\"></div>\n                    }\n\n                </div>\n              )\n            })\n          }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}